(ns phzr.impl.accessors.pixi.tiling-sprite)

(def tiling-sprite-get-properties
  {:alpha "alpha"
   :anchor "anchor"
   :blend-mode "blendMode"
   :cache-as-bitmap "cacheAsBitmap"
   :canvas-buffer "canvasBuffer"
   :children "children"
   :filter-area "filterArea"
   :filters "filters"
   :height "height"
   :hit-area "hitArea"
   :mask "mask"
   :parent "parent"
   :pivot "pivot"
   :position "position"
   :refresh-texture "refreshTexture"
   :renderable "renderable"
   :rotation "rotation"
   :scale "scale"
   :shader "shader"
   :stage "stage"
   :texture "texture"
   :texture-debug "textureDebug"
   :tile-pattern "tilePattern"
   :tile-position "tilePosition"
   :tile-scale "tileScale"
   :tile-scale-offset "tileScaleOffset"
   :tiling-texture "tilingTexture"
   :tint "tint"
   :tinted-texture "tintedTexture"
   :transform-callback "transformCallback"
   :transform-callback-context "transformCallbackContext"
   :visible "visible"
   :width "width"
   :world-alpha "worldAlpha"
   :world-position "worldPosition"
   :world-rotation "worldRotation"
   :world-scale "worldScale"
   :world-visible "worldVisible"
   :x "x"
   :y "y"})

(def tiling-sprite-set-properties
  {:alpha "alpha"
   :anchor "anchor"
   :blend-mode "blendMode"
   :cache-as-bitmap "cacheAsBitmap"
   :canvas-buffer "canvasBuffer"
   :filter-area "filterArea"
   :filters "filters"
   :height "height"
   :hit-area "hitArea"
   :mask "mask"
   :pivot "pivot"
   :position "position"
   :refresh-texture "refreshTexture"
   :renderable "renderable"
   :rotation "rotation"
   :scale "scale"
   :shader "shader"
   :texture "texture"
   :texture-debug "textureDebug"
   :tile-pattern "tilePattern"
   :tile-position "tilePosition"
   :tile-scale "tileScale"
   :tile-scale-offset "tileScaleOffset"
   :tiling-texture "tilingTexture"
   :tint "tint"
   :tinted-texture "tintedTexture"
   :transform-callback "transformCallback"
   :transform-callback-context "transformCallbackContext"
   :visible "visible"
   :width "width"
   :world-visible "worldVisible"
   :x "x"
   :y "y"})